Before writing the algorithm I have analysed the problem set and understood that the image needs to converted into it’s binary picture format and using the height and width we can gather the information about it’s rows and columns
The Algorithm I have used in my programme follows the following steps:
	Read the image from disk
	Convert the image into it’s binary format.
	Save the height and width as rows and columns.
	Loop through the height and width to create a 2d matrix
	Convert the matrix into pixels by checking if value is = 0  or 1;
Since we are dealing with height and width of an image the resultant outcome of the conversion will be  a 2 dimensional matrix(28 x 28).
•	For Encoding: 
	Create a linked list class  with a head element.
	Create  a node class with data and a node pointer that points to next element.
	The linked list class can then be instantiated as an array class with the size of the rows of the image.
	The Linked list class will have several methods like :
o	Insert: which helps to insert the new element in the list which points to the current element pointed by head.
o	Display: The display method iterates through the linked list and displays the all the elements until it reaches the last element which points towards null.
o	Encode: This methods helps the user to encode their image into an array of linked list with encoded dataset.
	Take the 28 x 28 matrix , rows and columns as function parameter.
	Create a counter and set it’s value to 0 to keep track of similar elements.
	Loop through the rows first and save the ith row index (initially I will be 0 and incremented by 1 until it reaches it’s length)and 0th column 
	index as a value to be compared with. (Could assume as 0 ) i.e compValue
	Add a condtional statement to check if 1st element is 0 or 1 and change the counter to 1 if element is 0. 
	Loop through the columns  starting with the 1st column index as the 0th index has been checked in the above loop.
	In every iteration of the loop  adda conditional statement to check if the  compValue is equal to the element in the array .
	If true increment the counter.
	Insert the recent counter value to the Linked list array’s ith index 
	Change the compValue to recent element value of the matrix
	Reset the counter
	Save the linked list generated by the encoded image.

•	For Decoding
	In the same linked link class we need to create another method that takes a linked list as a functional parameter.
	The passed linked list will be traversed and every last element will be 0’s and followed by 1’s until the element reaches head
	A conditional statement checks if the 1s number is 0 and if it is it should change the compValue to 1 lke:
Input:	Head-> 0->3->2
Output: 1 1 1 0 0 
